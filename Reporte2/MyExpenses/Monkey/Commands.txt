1- adb shell monkey -p org.totschnig.myexpenses -v 10000 --ignore-crashes > MyExpensesLog(1).txt
2- adb shell monkey -s 1508070564883 -p org.totschnig.myexpenses -v 10000 --ignore-crashes > MyExpensesLog(2).txt
3- adb shell monkey -p org.totschnig.myexpenses -v 100000 --ignore-crashes > MyExpensesLog(3).txt
4- adb shell monkey -p org.totschnig.myexpenses -v 5000000 > MyExpensesLog(4).txt
5- adb shell monkey --pct-touch 80 -p org.totschnig.myexpenses -vvv 5000 > MyExpensesLog(5).txt
6- adb shell monkey --pct-touch 80 --pct-motion 20 -p org.totschnig.myexpenses -vv 10000 > MyExpensesLog(6).txt
7- adb shell monkey --pct-trackball 50 --pct-nav 50 -p org.totschnig.myexpenses -vvv 10000 > MyExpensesLog(7).txt
8- adb shell monkey --pct-majornav 90 --pct-syskeys 10 -p org.totschnig.myexpenses -vvv 10000 > MyExpensesLog(8).txt
9- adb shell monkey --pct-appswitch 80 --pct-anyevent 20 -p org.totschnig.myexpenses -vvv 10000 > MyExpensesLog(9).txt
10- adb shell monkey --pct-touch 60 --pct-majornav 20 --pct-syskeys 0 --pct-appswitch 20 --pct-anyevent 0 -p org.totschnig.myexpenses -vvv 10000 > MyExpensesLog(10).txt
11- adb shell monkey --pct-touch 60 --pct-majornav 20 --pct-syskeys 0 --pct-appswitch 20 --pct-anyevent 0 -p org.totschnig.myexpenses -vvv 10000 > MyExpensesLog(11).txt
12- adb shell monkey --pct-touch 60 --pct-majornav 20 --pct-syskeys 0 --pct-appswitch 20 --pct-anyevent 0 -p org.totschnig.myexpenses -vvv 10000 > MyExpensesLog(12).txt
13- adb shell monkey --pct-touch 80 --pct-motion 0 --pct-trackball 0 --pct-nav 0 --pct-majornav 0 --pct-syskeys 0 --pct-appswitch 0 --pct-anyevent 20 -p org.totschnig.myexpenses -c android.intent.category.DEFAULT -c android.intent.category.BROWSABLE -c android.intent.category.LAUNCHER -vvv 100000 > MyExpensesLog(13).txt


Notas:

1 se ejecuto y genero una excepcion pero no era de la app, con la semilla 1508070564883.

2 se ejecuto con la semilla generado en 1 y se volvio a generar la misma excepcion, con la semilla 1508070564883.

3 se ejecuto y genero una excepcion pero no era de la app, con la semilla 1508116336823, se genero la misma excepcion de 1 y 2.

4 se ejecuto y genero una excepcion pero no era de la app, con la semilla 1508047945124, se genero otra excepcion. Este monkey tomo alrededor de 3 horas en ejecucion.

5 se ejecuto y genero una excepcion pero no era de la app, con la semilla 1508222655315, se genero la misma excepcion de 1, 2 y 3.

6 se ejecuto y genero una excepcion pero no era de la app, con la semilla 1508016592801, se genero la misma excepcion de 1, 2, 3 y 5.

7 se ejecuto y no genero excepcion, termino normalmente.

8 se ejecuto y no genero excepcion, termino normalmente.

9 se ejecuto y no genero excepcion, termino normalmente.

10 se ejecuto y genero una excepcion pero no era de la app, con la semilla 1508181151962, se genero la misma excepcion de 1, 2, 3, 5 y 6.

11 se ejecuto y genero una excepcion pero no era de la app, con la semilla 1508097463847, se genero la misma excepcion de 1, 2, 3, 5, 6 y 10.

12 se ejecuto y genero una excepcion pero no era de la app, con la semilla 1508157494973, se genero la misma excepcion de 1, 2, 3, 5, 6, 10 y 11.

13 se ejecuto y genero una excepcion pero no era de la app, con la semilla 1508013835043, se genero la misma excepcion de 1, 2, 3, 5, 6, 10, 11 y 12.

Para el 13 las categorias se sacaron del AndroidManifest.xml



Events:
-s <seed> 	                Seed value for pseudo-random number generator. If you re-run the Monkey with the same seed value, it will generate the same sequence of events.
--throttle <milliseconds> 	Inserts a fixed delay between events. You can use this option to slow down the Monkey. If not specified, there is no delay and the events are generated as rapidly as possible.
--pct-touch <percent> 	        Adjust percentage of touch events. (Touch events are a down-up event in a single place on the screen.)
--pct-motion <percent> 	        Adjust percentage of motion events. (Motion events consist of a down event somewhere on the screen, a series of pseudo-random movements, and an up event.)
--pct-trackball <percent> 	Adjust percentage of trackball events. (Trackball events consist of one or more random movements, sometimes followed by a click.)
--pct-nav <percent> 	        Adjust percentage of "basic" navigation events. (Navigation events consist of up/down/left/right, as input from a directional input device.)
--pct-majornav <percent> 	Adjust percentage of "major" navigation events. (These are navigation events that will typically cause actions within your UI, such as the center button in a 5-way pad, the back key, or the menu key.)
--pct-syskeys <percent> 	Adjust percentage of "system" key events. (These are keys that are generally reserved for use by the system, such as Home, Back, Start Call, End Call, or Volume controls.)
--pct-appswitch <percent> 	Adjust percentage of activity launches. At random intervals, the Monkey will issue a startActivity() call, as a way of maximizing coverage of all activities within your package.
--pct-anyevent <percent> 	Adjust percentage of other types of events. This is a catch-all for all other types of events such as keypresses, other less-used buttons on the device, and so forth.
